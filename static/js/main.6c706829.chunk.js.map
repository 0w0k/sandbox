{"version":3,"sources":["layout/SiderBar.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Sider","SubMenu","SiderBar","location","react_default","a","createElement","collapsible","className","menu","theme","defaultSelectedKeys","selectedKeys","pathname","mode","Item","key","react_router_dom","to","icon","type","title","Home","lazy","__webpack_require__","e","then","bind","Page","User","Mobx","Promise","all","Routes","react","fallback","spin","style","textAlign","react_router","exact","path","component","Header","Content","Footer","App","basename","layout","minHeight","background","padding","margin","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6c706829.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default function SiderBar (location: Location) {\n  return (\n    <Sider collapsible>\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" defaultSelectedKeys={['/']} selectedKeys={[location.pathname]} mode=\"inline\">\n        <Menu.Item key=\"/\">\n          <Link to=\"/\">\n            <Icon type=\"home\" />\n            <span>Home</span>\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"/page\">\n          <Link to=\"/page\">\n            <Icon type=\"desktop\" />\n            <span>Pgae</span>\n          </Link>\n        </Menu.Item>\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <Icon type=\"user\" />\n              <span>User</span>\n            </span>\n          }\n        >\n          <Menu.Item key=\"/user/Tom\"><Link to=\"/user/Tom\">Tom</Link></Menu.Item>\n          <Menu.Item key=\"/user/Bill\"><Link to=\"/user/Bill\">Bill</Link></Menu.Item>\n          <Menu.Item key=\"/user/Alex\"><Link to=\"/user/Alex\">Alex</Link></Menu.Item>\n        </SubMenu>\n        <SubMenu\n          key=\"sub2\"\n          title={\n            <span>\n              <Icon type=\"team\" />\n              <span>Util</span>\n            </span>\n          }\n        >\n          <Menu.Item key=\"/mobx\"><Link to=\"/mobx\">Mobx</Link></Menu.Item>\n          <Menu.Item key=\"8\">Team 2</Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"9\">\n          <Icon type=\"file\" />\n          <span>File</span>\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  )\n}","import React, { Suspense, lazy } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Spin } from \"antd\";\n\nconst Home = lazy(() => import('./routes/Home'));\nconst Page = lazy(() => import('./routes/Page'));\nconst User = lazy(() => import('./routes/User'));\nconst Mobx = lazy(() => import('./routes/Mobx'));\n\nexport default function () {\n  return (\n    <Suspense fallback={<Spin style={{ textAlign: 'center' }}/>}>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/page\" component={Page} />\n      <Route path=\"/user/:id\" component={User} />\n      <Route path=\"/mobx\" component={Mobx} />\n    </Suspense>\n  )\n}","import React from 'react';\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport SiderBar from './layout/SiderBar';\n// import Breadcrumb from './layout/Breadcrumb';\nimport Routes from './Routes';\n\nimport './App.less';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  return (\n    <Router basename=\"/react-layout\">\n      <Layout style={{ minHeight: '100vh' }}>\n        <Route component={(location: Location) => <SiderBar {...location} />} />\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }} />\n          <Content style={{ margin: '16px' }}>\n            {/* <Route component={(props) => <Breadcrumb {...props} />} /> */}\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n              <Routes />\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>React Layout Â©2018 Created by Yousfans</Footer>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}