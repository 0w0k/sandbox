{"version":3,"sources":["routes/Mobx.tsx"],"names":["TodoList","this","todos","filter","todo","finished","length","observable","computed","TodoListView","observer","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","props","todoList","map","TodoView","key","title","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","unfinishedTodoCount","React","Component","_ref","type","defaultChecked","onClick","store","Mobx","push"],"mappings":"2QAOMA,kJAGF,OAAOC,KAAKC,MAAMC,OAAO,SAAAC,GAAI,OAAKA,EAAKC,WAAUC,mDAFlDC,6EAA2B,qDAC3BC,wFAQGC,EADLC,+LAMG,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGZ,KAAKa,MAAMC,SAASb,MAAMc,IAAI,SAAAZ,GAAI,OACjCO,EAAAC,EAAAC,cAACI,EAAD,CAAUb,KAAMA,EAAMc,IAAKd,EAAKe,WAGpCR,EAAAC,EAAAC,cAAAO,EAAA,cANF,eAOenB,KAAKa,MAAMC,SAASM,4BAbdC,IAAMC,eA+B3BN,EAAWP,YAAS,SAAAc,GAAA,IAAGpB,EAAHoB,EAAGpB,KAAH,OACxBO,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAOY,KAAK,WAAWC,eAAgBtB,EAAKC,SAAUsB,QAAS,kBAAOvB,EAAKC,UAAYD,EAAKC,YAC3FD,EAAKe,SAIJS,EAAQ,IAAI5B,EAWH,SAAS6B,IACtB,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACJ,EAAD,CAAcM,SAAUa,KAb9BA,EAAM1B,MAAM4B,KACV,CACEX,MAAO,EACPd,UAAU,GAEZ,CACEc,MAAO","file":"static/js/6.01e301dd.chunk.js","sourcesContent":["import React from \"react\";\nimport { observable, computed } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { Button } from \"antd\";\n\ninterface todo { title: number, finished?: boolean }\n\nclass TodoList {\n  @observable todos: todo[] = [];\n  @computed get unfinishedTodoCount() {\n    return this.todos.filter(todo => !todo.finished).length;\n  }\n}\n\n// type TodoListViewProps = { todoList: TodoList }\n\n@observer\nclass TodoListView extends React.Component<{ todoList: TodoList }> {\n  // constructor(props: { todoList: TodoList}) {\n  //   super(props);\n  // }\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.props.todoList.todos.map(todo => (\n            <TodoView todo={todo} key={todo.title} />\n          ))}\n        </ul>\n        <Button>Add</Button>\n        Tasks left: {this.props.todoList.unfinishedTodoCount}\n      </div>\n    )\n  }\n}\n\n// const TodoListView: FunctionComponent<TodoListViewProps> = ({ todoList }) => {\n//   <div>\n//     <ul>\n//       {todoList.todos.map(todo => (\n//         <TodoView todo={todo} key={todo.title} />\n//       ))}\n//     </ul>\n//     <button>Add</button>\n//     Tasks left: {todoList.unfinishedTodoCount}\n//   </div>\n// }\n\nconst TodoView = observer(({ todo }) => (\n  <li>\n    <input type=\"checkbox\" defaultChecked={todo.finished} onClick={() => (todo.finished = !todo.finished)} />\n    {todo.title}\n  </li>\n))\n\nconst store = new TodoList();\nstore.todos.push(\n  {\n    title: 1,\n    finished: true\n  },\n  {\n    title: 2,\n  },\n);\n\nexport default function Mobx () {\n  return (\n    <div>\n      <TodoListView todoList={store} />\n    </div>\n  )\n}"],"sourceRoot":""}